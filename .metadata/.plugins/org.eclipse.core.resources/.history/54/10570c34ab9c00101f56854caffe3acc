package com.farmchainx.backend.entity;

import com.fasterxml.jackson.annotation.JsonProperty;
import jakarta.persistence.*;
import java.time.LocalDateTime;

@Entity
@Table(name = "users")
public class User {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @Column(name = "full_name", nullable = false)
    private String fullName;
    
    @Column(nullable = false, unique = true)
    private String email;
    
    @Column(nullable = false)
    private String password;
    
    @Column(nullable = false)
    private String role;
    
    @Column(name = "is_approved")
    private Boolean isApproved = true; // Default to true for all users
    
    @Column(name = "farm_name")
    private String farmName;
    
    @Column(name = "company_name")
    private String companyName;
    
    @Column(name = "created_at")
    private LocalDateTime createdAt;
    
    @Column(name = "updated_at")
    private LocalDateTime updatedAt;
    
    @OneToMany(mappedBy = "distributor", cascade = CascadeType.ALL)
    private List<Product> products;

    @OneToMany(mappedBy = "consumer", cascade = CascadeType.ALL)
    private List<Order> orders;
    
    // Constructors
    public User() {
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
        this.isApproved = true; // Auto-approve all users
    }
    
    public User(String fullName, String email, String password, String role) {
        this();
        this.fullName = fullName;
        this.email = email;
        this.password = password;
        this.role = role;
        this.isApproved = true; // Auto-approve all users
    }
    
    // Getters and Setters
    public Long getId() { return id; }
    public void setId(Long id) { this.id = id; }
    
    public String getFullName() { return fullName; }
    public void setFullName(String fullName) { this.fullName = fullName; }
    
    public String getEmail() { return email; }
    public void setEmail(String email) { this.email = email; }
    
    public String getPassword() { return password; }
    public void setPassword(String password) { this.password = password; }
    
    public String getRole() { return role; }
    public void setRole(String role) { 
        this.role = role; 
        // Fix role names for consistency
        if ("FAWBER".equals(role)) {
            this.role = "FARMER";
        } else if ("CONSUME".equals(role)) {
            this.role = "CONSUMER";
        }
    }
    
    public List<Product> getProducts() { return products; }
    public void setProducts(List<Product> products) { this.products = products; }
    
    // Direct getter for isApproved field
    public Boolean getIsApproved() {
        return isApproved != null ? isApproved : true;
    }
    
    public void setIsApproved(Boolean isApproved) {
        this.isApproved = isApproved != null ? isApproved : true;
        this.updatedAt = LocalDateTime.now();
    }
    
    // Frontend compatible property
    @JsonProperty("approved")
    public Boolean getApproved() {
        return getIsApproved();
    }
    
    @JsonProperty("approved")
    public void setApproved(Boolean approved) {
        setIsApproved(approved);
    }
    
    public String getFarmName() { return farmName; }
    public void setFarmName(String farmName) { this.farmName = farmName; }
    
    public String getCompanyName() { return companyName; }
    public void setCompanyName(String companyName) { this.companyName = companyName; }
    
    public LocalDateTime getCreatedAt() { return createdAt; }
    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }
    
    public LocalDateTime getUpdatedAt() { return updatedAt; }
    public void setUpdatedAt(LocalDateTime updatedAt) { this.updatedAt = updatedAt; }
    
    @PrePersist
    protected void onCreate() {
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
        // Ensure role consistency
        if ("FAWBER".equals(this.role)) {
            this.role = "FARMER";
        } else if ("CONSUME".equals(this.role)) {
            this.role = "CONSUMER";
        }
        // Auto-approve all users
        if (this.isApproved == null) {
            this.isApproved = true;
        }
    }
    
    @PreUpdate
    public void preUpdate() {
        this.updatedAt = LocalDateTime.now();
        // Ensure role consistency
        if ("FAWBER".equals(this.role)) {
            this.role = "FARMER";
        } else if ("CONSUME".equals(this.role)) {
            this.role = "CONSUMER";
        }
        // Auto-approve all users
        if (this.isApproved == null) {
            this.isApproved = true;
        }
    }
    
    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", fullName='" + fullName + '\'' +
                ", email='" + email + '\'' +
                ", role='" + role + '\'' +
                ", isApproved=" + isApproved +
                ", createdAt=" + createdAt +
                '}';
    }
}